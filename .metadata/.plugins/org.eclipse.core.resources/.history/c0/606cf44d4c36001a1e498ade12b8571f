package fr.epita.quizmanager.datamodel;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class MCQQuestionCSVDAO {

	private static final String TOPIC_DELIMITER = "||||";
	private static final String COLUMN_DELIMITER = "####";
	private File file = new File("questions.csv");
	private PrintWriter writer;
	
	public MCQQuestionCSVDAO() throws FileNotFoundException {
		this.writer = new PrintWriter(new FileOutputStream(this.file, true));
	}
	
	public void createQuestions(MCQQuestion mcqQuestion) {
		String formatted = String.valueOf(mcqQuestion.getId()) + COLUMN_DELIMITER;
		formatted += String.valueOf(mcqQuestion.getDifficulty()) + COLUMN_DELIMITER + mcqQuestion.getContent()
				+ COLUMN_DELIMITER;

		String[] topics = mcqQuestion.getTopics();

		for (int i = 0; i < topics.length; i++) {
			if (i == topics.length - 1) {
				formatted += topics[i] + COLUMN_DELIMITER;
			} else {
				formatted += topics[i] + TOPIC_DELIMITER;
			}
		}

		System.out.println("formatted");
		System.out.println(formatted);
		
		// TODO write the formatted into a file
		this.writer.println(formatted);
		this.writer.flush();
		
	}

	public List<MCQQuestion> readAllQuestions() {

		List<MCQQuestion> results = new ArrayList<MCQQuestion>();

		// TODO read all the line from the file

		String[] parts = line.split(COLUMN_DELIMITER);

		System.out.println(Arrays.asList(parts));
		Long id = Long.valueOf(parts[0]);
		Integer difficulty = Integer.valueOf(parts[1]);
		String content = parts[2];
		String[] readTopics = parts[3].split(TOPIC_DELIMITER);

		MCQQuestion reconstruction = new MCQQuestion();
		reconstruction.setDifficulty(difficulty);
		reconstruction.setContent(content);
		reconstruction.setTopics(readTopics);
		reconstruction.setId(id);
	}

}
